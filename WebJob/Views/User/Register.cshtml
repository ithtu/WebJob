
@model WebJob.Models.employee
@{
    ViewBag.Title = "Đăng ký";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
<link href="https://cdnjs.cloudflare.com/ajax/libs/simple-line-icons/2.4.1/css/simple-line-icons.min.css" rel="stylesheet">
<link href="~/Content/register.css" rel="stylesheet" />

<div class="registration-form">
    @using (@Html.BeginForm("Register", "User", FormMethod.Post, new { @id = "formRes", @class = "form-css" }))
    {
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <form style="background-color:whitesmoke" id="checkForm" method="get">
            <div class="form-group">
                <input name="logo" id="logo" style="display: none"/>
                <img id="pictureUpload" style="width: 200px; height: 200px; border-radius: 50%" />
                <input type="file" name="fileUpload" id="fileUpload" accept="image/*"
                       style="display:none;" />
                
                <input type="button" id="btnUpload" value="Chọn" class="btn btn-success" />
            </div>
            <div class="form-group">
                <input type="text" name="name" class="form-control item" id="name" placeholder="Họ tên">
                @Html.ValidationMessageFor(model => model.name_employee, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <input type="text" name="email" class="form-control item" id="email" placeholder="Email">
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger", @id = "mailer" })
                <p style="padding-left: 5px; color:red; font-weight:bold">@ViewData["Error_mail"]</p>
            </div>
            <div class="form-group">
                <input type="password" name="password" class="form-control item" id="password" placeholder="Mật khẩu">
                @Html.ValidationMessageFor(model => model.account.password, "", new { @class = "text-danger", @id = "message" })

            </div>
            <div class="form-group">
                <input type="password" name="confirm_password" class="form-control item" id="confirm_password" placeholder="Xác nhận mật khẩu">
                @Html.ValidationMessageFor(model => model.account.password, "", new { @class = "text-danger" })
                <p style="padding-left: 5px; color:red; font-weight:bold">@ViewData["Error_Not_Same"]</p>
            </div>

           
            <div class="form-group">
                <select name="gender" style="border-radius: 20px; margin-bottom: 4px; padding: 7px 20px; font-size: 1rem; font-weight: 400; line-height: 1.5; color: #495057; background-color: #fff; background-clip: padding-box; border: 1px solid #ced4da">
                    <option> Male </option>
                    <option> Female </option>
                        
                </select>
                @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })

            </div>
            <div class="form-group">
                <input type="text" name="phone" class="form-control item" id="phone" placeholder="Số điện thoại">
                @Html.ValidationMessageFor(model => model.phonenumber_employee, "", new { @class = "text-danger", @id = "phoneer" })
                <p style="padding-left: 5px; color:red; font-weight:bold">@ViewData["Error_phone"]</p>
            </div>
            <div class="form-group">
                <input type="date" name="birthday" class="form-control item" id="birth_date" placeholder="Ngày sinh">
                @Html.ValidationMessageFor(model => model.day_birth, "", new { @class = "text-danger" })

            </div>
            <div class="form-group">
                <input type="text" name="address" class="form-control item" id="address" placeholder="Địa chỉ">
                @Html.ValidationMessageFor(model => model.address_employee, "", new { @class = "text-danger" })

            </div>
            <div class="form-group">
                <button type="submit" action=@Url.Action("SignUp","User") class="btn btn-block create-account">Tạo tài khoản</button>
            </div>
        </form>
    }

</div>
<script type="text/javascript" src="~/Scripts/jquery-3.4.1.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.15/jquery.mask.min.js"></script>


<script src="~/Scripts/jquery.validate.min.js"></script>
@section scripts {
    <script>
        $(document).ready(function () {
            $("#formRes").validate({
                rules: {
                    name: {
                        required: true
                    },
                    birth_date: {
                        required: true
                    },
                   
                    address: {
                        required: true
                    },
                    password: {
                        required: true
                    },
                    confirm_password: {
                        equalTo: "#password"
                    }

                },
                messages: {
                    name: {
                        required: "Không được bỏ trống"
                    },
                    birth_date: {
                        required: "Không được bỏ trống"
                    },
                    
                    address: {
                        required: "Không được bỏ trống"
                    },
                    password: {
                        required: "Không được bỏ trống"

                    },
                    confirm_password: {
                        equalTo: "Mật khẩu xác nhận khác với mật khẩu"
                    }


                }
            })
        });
    </script>
}
<script>
    $(document).ready(function () {
        $('#phone').blur(function (e) {
            if (validatePhone('phone')) {
                $('#phoneer').html('');
                $('#phoneer').css('color','green');
            }
            else {
                $('#phoneer').html('Vui lòng nhập đúng định dạng');
            }
        });
    });
</script>
<script>
    $(document).ready(function () {
        $('#email').blur(function (e) {
            if (validateMail('email')) {
                $('#mailer').html('');
                $('#mailer').css('color', 'green');
            }
            else {
                $('#mailer').html('Email sai định dạng (ví dụ: abcd@efgh.iklm) ');
            }
        });
    });
</script>
<script>
    $(document).ready(function () {
        $('#password').keyup(function (e) {
            $('#message').html(checkStrength($('#password').val()))
            $('#message').css('color','red')
        });
    });
</script>
<script src="~/Scripts/js/validation.js"></script>
@section upload
    {
    <script>
        $(function () {
            $('#btnUpload').click(function () {
                $('#fileUpload').trigger('click');
            });
        });
        $('#fileUpload').change(function () {
            if (window.FormData !== undefined) {
                var fileUpload = $('#fileUpload').get(0);
                var files = fileUpload.files;
                var formData = new FormData();
                formData.append('file', files[0]);
                $.ajax(
                    {
                        type: 'POST',
                        url: '/User/ProcessUpload',
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function (urlImage) {
                            $('#pictureUpload').attr('src', urlImage);
                            $('#logo').val(urlImage);
                        },
                        error: function (err) {
                            alert('Error ', err.statusText);
                        }
                    });
            }
        });
    </script>
}